// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Post      Post     @relation(fields: [postId], references: [id])
  userId    Int
  postId    Int
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  viewed    Boolean  @default(false)
  User      User     @relation(fields: [userId], references: [id])
  Sender    User     @relation("Sender", fields: [sendTo], references: [id])
  userId    Int
  sendTo    Int
}

model Post {
  id        Int       @id @default(autoincrement())
  content   String
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User      @relation(fields: [userId], references: [id])
  userId    Int
  Comment   Comment[] // post has many comments

  @@index([userId], name: "userId")
}

model Request {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  Sender    User     @relation("Sender", fields: [sendTo], references: [id])
  userId    Int
  sendTo    Int
}

model User {
  id           Int      @id @default(autoincrement())
  bgImage      String?
  avatar       String?
  firstName    String
  lastName     String
  birthday     String
  email        String
  password     String
  connected    Boolean  @default(false)
  userFunction String?
  description  String?
  address      String?
  country      String?
  phone        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  url          String?

  // Define relationships

  Comment          Comment[]
  MessagesSent     Message[] @relation("Sender")
  MessagesReceived Message[]
  Post             Post[]
  RequestsSent     Request[] @relation("Sender")
  RequestsReceived Request[]
}
